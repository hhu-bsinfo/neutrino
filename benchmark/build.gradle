plugins {
    id 'java'
}

apply plugin: "me.champeau.gradle.jmh"

compileJava {
    sourceCompatibility = '11'
    targetCompatibility = '11'
    options.encoding = 'UTF-8'
}

group = 'de.hhu.bsinfo'
version = getProperty('projectVersion')

jmh {
    include = ['JniCallBenchmark']
}

jmh.jvmArgs = [
        "-Djava.library.path=${System.getProperty('java.library.path')}:${project(':native').buildDir}/lib/main/debug".toString()
]

task benchmarkJar(type: Jar, dependsOn: jmhJar) {
    manifest {
        attributes 'Main-Class': 'org.openjdk.jmh.Main'
    }
    classifier = 'benchmark'
    from {
        (jmhJar.outputs.files + configurations.jmh + configurations.jmhRuntime)
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':api')
    implementation project(':core')

    implementation group: 'info.picocli', name: 'picocli', version: '0.9.5'
    
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
