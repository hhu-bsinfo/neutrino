plugins {
    // Base Plugins
    id 'idea'
    id 'java-library'

    // Helper Plugins
    id 'de.fuerstenau.buildconfig' version '1.1.8'
    id 'com.palantir.git-version' version '0.11.0'

    // Spring Boot Plugins
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

compileJava {
    sourceCompatibility = '11'
    targetCompatibility = '11'
    options.encoding = 'UTF-8'
}

group = 'de.hhu.bsinfo'
version = getProperty('projectVersion')

bootJar {
    enabled = false
}

jar {
    enabled = true
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Spring Boot starter
    implementation 'org.springframework.boot:spring-boot-starter'

    // Public libraries
    api project(':neutrino')
    api 'io.projectreactor:reactor-core:3.3.1.RELEASE'

    // Utilities
    implementation 'javax.inject:javax.inject:1'
    implementation 'org.jetbrains:annotations:17.0.0'
    implementation 'org.yaml:snakeyaml:1.24'

    // Monitoring
    implementation 'io.micrometer:micrometer-core'

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
    testImplementation 'org.assertj:assertj-core:3.12.2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
}

test {
    useJUnitPlatform()
}

buildConfig {
    def gitVersion = versionDetails()

    appName = project.name
    version = project.version

    clsName = 'BuildConfig'
    packageName = 'de.hhu.bsinfo.neutrino.generated'

    charset = 'UTF-8'

    buildConfigField 'String', 'BUILD_DATE', new Date().format('yyyy-MM-dd HH:mm:ss')
    buildConfigField 'String', 'GIT_COMMIT', gitVersion.gitHash
    buildConfigField 'String', 'GIT_BRANCH', gitVersion.branchName
}